["src/nvim/globals.h", ["# define MSG_BUF_LEN 480                 // length of buffer for small messages", "# define MSG_BUF_CLEN  (MSG_BUF_LEN / 6) // cell length (worst case: utf-8", "                                         // takes 6 bytes for one cell)"], "whitespace/comments"]
["src/nvim/globals.h", ["# define FOR_ALL_WINDOWS_IN_TAB(wp, tp) \\", "  for (win_T *wp = ((tp) == curtab) \\", "              ? firstwin : (tp)->tp_firstwin; wp != NULL; wp = wp->w_next)"], "readability/braces"]
["src/nvim/globals.h", ["  for (win_T *wp = ((tp) == curtab) \\", "              ? firstwin : (tp)->tp_firstwin; wp != NULL; wp = wp->w_next)", ""], "whitespace/alignment"]
["src/nvim/globals.h", ["// Iterates over all tabs in the tab list", "# define FOR_ALL_TABS(tp) for (tabpage_T *tp = first_tabpage; tp != NULL; tp = tp->tp_next)", ""], "whitespace/line_length"]
["src/nvim/globals.h", ["#define FOR_ALL_BUFFERS(buf) \\", "  for (buf_T *buf = firstbuf; buf != NULL; buf = buf->b_next)", "#define FOR_ALL_BUFFERS_BACKWARDS(buf) \\"], "readability/braces"]
["src/nvim/globals.h", ["#define FOR_ALL_BUFFERS_BACKWARDS(buf) \\", "  for (buf_T *buf = lastbuf; buf != NULL; buf = buf->b_prev)", ""], "readability/braces"]
["src/nvim/globals.h", ["#if MAXPATHL > IOSIZE", "MAXPATHL", "#else"], "whitespace/indent"]
["src/nvim/globals.h", ["#else", "IOSIZE", "#endif"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_afterinit[] INIT(= N_(", "        \"E905: Cannot set this option after startup\"));", "EXTERN char_u e_api_spawn_failed[] INIT(= N_(\"E903: Could not spawn API job\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_argreq[] INIT(= N_(\"E471: Argument required\"));", "EXTERN char_u e_backslash[] INIT(= N_(\"E10: \\\\ should be followed by /, ? or &\"));", "EXTERN char_u e_cmdwin[] INIT(= N_("], "whitespace/line_length"]
["src/nvim/globals.h", ["EXTERN char_u e_cmdwin[] INIT(= N_(", "        \"E11: Invalid in command-line window; <CR> executes, CTRL-C quits\"));", "EXTERN char_u e_curdir[] INIT(= N_("], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_curdir[] INIT(= N_(", "        \"E12: Command not allowed from exrc/vimrc in current dir or tag search\"));", "EXTERN char_u e_endif[] INIT(= N_(\"E171: Missing :endif\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_curdir[] INIT(= N_(", "        \"E12: Command not allowed from exrc/vimrc in current dir or tag search\"));", "EXTERN char_u e_endif[] INIT(= N_(\"E171: Missing :endif\"));"], "whitespace/line_length"]
["src/nvim/globals.h", ["EXTERN char_u e_modifiable[] INIT(= N_(", "        \"E21: Cannot make changes, 'modifiable' is off\"));", "EXTERN char_u e_nesting[] INIT(= N_(\"E22: Scripts nested too deep\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_nopresub[] INIT(= N_(", "        \"E33: No previous substitute regular expression\"));", "EXTERN char_u e_noprev[] INIT(= N_(\"E34: No previous command\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_prev_dir[] INIT(= N_(", "        \"E459: Cannot go back to previous directory\"));", ""], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_screenmode[] INIT(= N_(", "        \"E359: Screen mode setting not supported\"));", "EXTERN char_u e_scroll[] INIT(= N_(\"E49: Invalid scroll size\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_winheight[] INIT(= N_(", "        \"E591: 'winheight' cannot be smaller than 'winminheight'\"));", "EXTERN char_u e_winwidth[] INIT(= N_("], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_winwidth[] INIT(= N_(", "        \"E592: 'winwidth' cannot be smaller than 'winminwidth'\"));", "EXTERN char_u e_write[] INIT(= N_(\"E80: Error while writing\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_maxmempat[] INIT(= N_(", "        \"E363: pattern uses more memory than 'maxmempattern'\"));", "EXTERN char_u e_emptybuf[] INIT(= N_(\"E749: empty buffer\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["EXTERN char_u e_invalpat[] INIT(= N_(", "        \"E682: Invalid search pattern or delimiter\"));", "EXTERN char_u e_bufloaded[] INIT(= N_(\"E139: File is loaded in another buffer\"));"], "whitespace/indent"]
["src/nvim/globals.h", ["        \"E682: Invalid search pattern or delimiter\"));", "EXTERN char_u e_bufloaded[] INIT(= N_(\"E139: File is loaded in another buffer\"));", "EXTERN char_u e_notset[] INIT(= N_(\"E764: Option '%s' is not set\"));"], "whitespace/line_length"]
