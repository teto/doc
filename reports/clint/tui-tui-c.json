["src/nvim/tui/tui.c", ["#define STARTS_WITH(str, prefix) (strlen(str) >= (sizeof(prefix) - 1) \\", "    && 0 == memcmp((str), (prefix), sizeof(prefix) - 1))", "#define TMUX_WRAP(is_tmux, seq) ((is_tmux) \\"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["static void unibi_set_if_empty(unibi_term *ut, enum unibi_string str,", "    const char *val)", "{"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_cursor_style = (int)unibi_add_ext_str(ut, \"Ss\",", "          \"\\x1b[?\"", "          \"%?\""], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"\\x1b[?\"", "          \"%?\"", "          // The parameter passed to Ss is the DECSCUSR parameter, so the"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          // possible to have a steady block (no steady underline)", "          \"%p1%{2}%<\" \"%t%{8}\"       // blink block", "          \"%e%p1%{2}%=\" \"%t%{112}\"   // steady block"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%p1%{2}%<\" \"%t%{8}\"       // blink block", "          \"%e%p1%{2}%=\" \"%t%{112}\"   // steady block", "          \"%e%p1%{3}%=\" \"%t%{4}\"     // blink underline (set to half block)"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{2}%=\" \"%t%{112}\"   // steady block", "          \"%e%p1%{3}%=\" \"%t%{4}\"     // blink underline (set to half block)", "          \"%e%p1%{4}%=\" \"%t%{4}\"     // steady underline"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{3}%=\" \"%t%{4}\"     // blink underline (set to half block)", "          \"%e%p1%{4}%=\" \"%t%{4}\"     // steady underline", "          \"%e%p1%{5}%=\" \"%t%{2}\"     // blink bar (set to underline)"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{4}%=\" \"%t%{4}\"     // steady underline", "          \"%e%p1%{5}%=\" \"%t%{2}\"     // blink bar (set to underline)", "          \"%e%p1%{6}%=\" \"%t%{2}\"     // steady bar"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{5}%=\" \"%t%{2}\"     // blink bar (set to underline)", "          \"%e%p1%{6}%=\" \"%t%{2}\"     // steady bar", "          \"%e%{0}\"                   // anything else"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{6}%=\" \"%t%{2}\"     // steady bar", "          \"%e%{0}\"                   // anything else", "          \"%;\" \"%dc\");"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%{0}\"                   // anything else", "          \"%;\" \"%dc\");", "      if (-1 == data->unibi_ext.reset_cursor_style) {"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_cursor_style = (int)unibi_add_ext_str(ut, \"Ss\",", "          TMUX_WRAP(tmux, \"\\x1b]50;CursorShape=%?\"", "          \"%p1%{3}%<\" \"%t%{0}\"    // block"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          TMUX_WRAP(tmux, \"\\x1b]50;CursorShape=%?\"", "          \"%p1%{3}%<\" \"%t%{0}\"    // block", "          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%p1%{3}%<\" \"%t%{0}\"    // block", "          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline", "          \"%e%{1}\"                // everything else is bar"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline", "          \"%e%{1}\"                // everything else is bar", "          \"%;%d;BlinkingCursorEnabled=%?\""], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%{1}\"                // everything else is bar", "          \"%;%d;BlinkingCursorEnabled=%?\"", "          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%;%d;BlinkingCursorEnabled=%?\"", "          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,", "          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag."], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,", "          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag.", "          \"%;%d\\x07\"));"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag.", "          \"%;%d\\x07\"));", "      if (-1 == data->unibi_ext.reset_cursor_style) {"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          TMUX_WRAP(tmux, \"\\x1b]50;CursorShape=%?\"", "          \"%p1%{3}%<\" \"%t%{0}\"    // block", "          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%p1%{3}%<\" \"%t%{0}\"    // block", "          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline", "          \"%e%{1}\"                // everything else is bar"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{5}%<\" \"%t%{2}\"  // underline", "          \"%e%{1}\"                // everything else is bar", "          \"%;%d;BlinkingCursorEnabled=%?\""], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%{1}\"                // everything else is bar", "          \"%;%d;BlinkingCursorEnabled=%?\"", "          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%;%d;BlinkingCursorEnabled=%?\"", "          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,", "          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag."], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%p1%{1}%<\" \"%t%{1}\"  // Fortunately if we exclude zero as special,", "          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag.", "          \"%;%d\\x07\"));"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["          \"%e%p1%{1}%&\"  // in all other cases we can treat bit #0 as a flag.", "          \"%;%d\\x07\"));", "      if (-1 == data->unibi_ext.reset_cursor_style) {"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      unibi_set_ext_str(ut, (size_t)data->unibi_ext.reset_cursor_style,", "          \"\\x1b]50;\\x07\");", "    }"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["    data->unibi_ext.resize_screen = (int)unibi_add_ext_str(ut,", "      \"ext.resize_screen\",", "      \"\\x1b[8;%p1%d;%p2%dt\");"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      \"ext.resize_screen\",", "      \"\\x1b[8;%p1%d;%p2%dt\");", "  }"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["    data->unibi_ext.reset_scroll_region = (int)unibi_add_ext_str(ut,", "      \"ext.reset_scroll_region\",", "      \"\\x1b[r\");"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      \"ext.reset_scroll_region\",", "      \"\\x1b[r\");", "  }"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_rgb_foreground = (int)unibi_add_ext_str(ut, \"setrgbf\",", "          \"\\x1b[38:2:%p1%d:%p2%d:%p3%dm\");", "    } else {"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_rgb_foreground = (int)unibi_add_ext_str(ut, \"setrgbf\",", "          \"\\x1b[38;2;%p1%d;%p2%d;%p3%dm\");", "    }"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_rgb_background = (int)unibi_add_ext_str(ut, \"setrgbb\",", "          \"\\x1b[48:2:%p1%d:%p2%d:%p3%dm\");", "    } else {"], "whitespace/alignment"]
["src/nvim/tui/tui.c", ["      data->unibi_ext.set_rgb_background = (int)unibi_add_ext_str(ut, \"setrgbb\",", "          \"\\x1b[48;2;%p1%d;%p2%d;%p3%dm\");", "    }"], "whitespace/alignment"]
