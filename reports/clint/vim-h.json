["src/nvim/vim.h", ["", "#ifndef TRUE", "# define FALSE  0           // note: this is an int, not a long!"], "readability/bool"]
["src/nvim/vim.h", ["#ifndef TRUE", "# define FALSE  0           // note: this is an int, not a long!", "# define TRUE   1"], "readability/bool"]
["src/nvim/vim.h", ["# define FALSE  0           // note: this is an int, not a long!", "# define TRUE   1", "#endif"], "readability/bool"]
["src/nvim/vim.h", ["", "#define MAYBE   2           // sometimes used for a variant on TRUE", ""], "readability/bool"]
["src/nvim/vim.h", ["#define STRLEN(s)           strlen((char *)(s))", "#define STRCPY(d, s)        strcpy((char *)(d), (char *)(s))", "#define STRNCPY(d, s, n)    strncpy((char *)(d), (char *)(s), (size_t)(n))"], "runtime/printf"]
["src/nvim/vim.h", ["#define STRCPY(d, s)        strcpy((char *)(d), (char *)(s))", "#define STRNCPY(d, s, n)    strncpy((char *)(d), (char *)(s), (size_t)(n))", "#define STRLCPY(d, s, n)    xstrlcpy((char *)(d), (char *)(s), (size_t)(n))"], "runtime/printf"]
["src/nvim/vim.h", ["", "#define STRCAT(d, s)        strcat((char *)(d), (char *)(s))", "#define STRNCAT(d, s, n)    strncat((char *)(d), (char *)(s), (size_t)(n))"], "runtime/printf"]
["src/nvim/vim.h", ["#define STRCAT(d, s)        strcat((char *)(d), (char *)(s))", "#define STRNCAT(d, s, n)    strncat((char *)(d), (char *)(s), (size_t)(n))", "#define STRLCAT(d, s, n)    xstrlcat((char *)(d), (char *)(s), (size_t)(n))"], "runtime/printf"]
