["src/nvim/normal.h", ["", "/* Values for find_ident_under_cursor() */", "#define FIND_IDENT      1       /* find identifier (word) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["/* Values for find_ident_under_cursor() */", "#define FIND_IDENT      1       /* find identifier (word) */", "#define FIND_STRING     2       /* find any string (WORD) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["#define FIND_IDENT      1       /* find identifier (word) */", "#define FIND_STRING     2       /* find any string (WORD) */", "#define FIND_EVAL       4       /* include \"->\", \"[]\" and \".\" */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["#define FIND_STRING     2       /* find any string (WORD) */", "#define FIND_EVAL       4       /* include \"->\", \"[]\" and \".\" */", ""], "readability/old_style_comment"]
["src/nvim/normal.h", ["", "/*", " * Arguments for operators."], "readability/old_style_comment"]
["src/nvim/normal.h", ["", "/*", " * Arguments for Normal mode commands."], "readability/old_style_comment"]
["src/nvim/normal.h", ["typedef struct cmdarg_S {", "  oparg_T     *oap;             /* Operator arguments */", "  int prechar;                  /* prefix character (optional, always 'g') */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  oparg_T     *oap;             /* Operator arguments */", "  int prechar;                  /* prefix character (optional, always 'g') */", "  int cmdchar;                  /* command character */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int prechar;                  /* prefix character (optional, always 'g') */", "  int cmdchar;                  /* command character */", "  int nchar;                    /* next command character (optional) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int cmdchar;                  /* command character */", "  int nchar;                    /* next command character (optional) */", "  int ncharC1;                  /* first composing character (optional) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int nchar;                    /* next command character (optional) */", "  int ncharC1;                  /* first composing character (optional) */", "  int ncharC2;                  /* second composing character (optional) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int ncharC1;                  /* first composing character (optional) */", "  int ncharC2;                  /* second composing character (optional) */", "  int extra_char;               /* yet another character (optional) */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int ncharC2;                  /* second composing character (optional) */", "  int extra_char;               /* yet another character (optional) */", "  long opcount;                 /* count before an operator */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int extra_char;               /* yet another character (optional) */", "  long opcount;                 /* count before an operator */", "  long count0;                  /* count before command, default 0 */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  long opcount;                 /* count before an operator */", "  long count0;                  /* count before command, default 0 */", "  long count1;                  /* count before command, default 1 */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  long count0;                  /* count before command, default 0 */", "  long count1;                  /* count before command, default 1 */", "  int arg;                      /* extra argument from nv_cmds[] */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  long count1;                  /* count before command, default 1 */", "  int arg;                      /* extra argument from nv_cmds[] */", "  int retval;                   /* return: CA_* values */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int arg;                      /* extra argument from nv_cmds[] */", "  int retval;                   /* return: CA_* values */", "  char_u      *searchbuf;       /* return: pointer to search pattern or NULL */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["  int retval;                   /* return: CA_* values */", "  char_u      *searchbuf;       /* return: pointer to search pattern or NULL */", "} cmdarg_T;"], "readability/old_style_comment"]
["src/nvim/normal.h", ["", "/* values for retval: */", "#define CA_COMMAND_BUSY     1   /* skip restarting edit() once */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["/* values for retval: */", "#define CA_COMMAND_BUSY     1   /* skip restarting edit() once */", "#define CA_NO_ADJ_OP_END    2   /* don't adjust operator end */"], "readability/old_style_comment"]
["src/nvim/normal.h", ["#define CA_COMMAND_BUSY     1   /* skip restarting edit() once */", "#define CA_NO_ADJ_OP_END    2   /* don't adjust operator end */", ""], "readability/old_style_comment"]
