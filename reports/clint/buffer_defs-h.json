["src/nvim/buffer_defs.h", ["", "#endif // NVIM_BUFFER_DEFS_H", ""], "build/header_guard"]
["src/nvim/buffer_defs.h", ["", "typedef struct file_buffer buf_T; // Forward declaration", ""], "whitespace/comments"]
["src/nvim/buffer_defs.h", ["", "/*", " * Flags for w_valid."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * The taggy struct is used to store the information about a :tag command."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * structure used to store one block of the stuff/redo/recording buffers"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * header used for the stuff buffer and the redo buffer"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Structure that contains all options that are local to a window."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Window info stored with a buffer."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Argument list: Array of file names."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Used for the typeahead buffer: typebuf."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Structure used for mappings and abbreviations."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Used for :syntime: timing of executing a syntax pattern."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * These are items normally related to a buffer.  But when using \":ownsyntax\""], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * buffer: structure that holds information about one file"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  bool b_saving;                /* Set to true if we are in the middle of", "                                   saving the buffer. */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["", "  bool b_saving;                /* Set to true if we are in the middle of", "                                   saving the buffer. */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * Changes to a buffer require updating of the display.  To minimize the"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["   */", "  bool b_mod_set;               /* true when there are changes since the last", "                                   time the display was updated */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["   */", "  bool b_mod_set;               /* true when there are changes since the last", "                                   time the display was updated */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * the changelist contains old change positions"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * Character table, only used in charset.c for 'iskeyword'"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["  garray_T b_ucmds;", "  /*", "   * start and end of an operator, also used for '[ and ']"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * The following only used in undo.c."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * variables for \"U\" command in undo.c"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * Options local to a buffer."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  linenr_T b_no_eol_lnum;       /* non-zero lnum when last line of next binary", "                                 * write should not have an end-of-line */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["", "  linenr_T b_no_eol_lnum;       /* non-zero lnum when last line of next binary", "                                 * write should not have an end-of-line */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /* When a buffer is created, it starts without a swap file.  b_may_swap is", "   * then set to indicate that a swap file may be opened later.  It is reset"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["  bool b_may_swap;", "  bool b_did_warn;              /* Set to true if user has been warned on first", "                                   change of a read-only file */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["  bool b_may_swap;", "  bool b_did_warn;              /* Set to true if user has been warned on first", "                                   change of a read-only file */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /* Two special kinds of buffers:", "   * help buffer  - used for help files, won't use a swap file."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Stuff for diff mode."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Each diffblock defines where a block of lines starts in each of the buffers"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Structure to cache info for displayed lines in w_lines[]."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Windows are kept in a tree of frames.  Each frame has a column (FR_COL)"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * Struct used for highlighting 'hlsearch' matches, matches defined by"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "/*", " * matchitem_T provides a linked list for storing match items for \":match\" and"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * \"w_topline\", \"w_leftcol\" and \"w_skipcol\" specify the offsets for"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["   */", "  linenr_T w_topline;               /* buffer line number of the line at the", "                                       top of the window */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["   */", "  linenr_T w_topline;               /* buffer line number of the line at the", "                                       top of the window */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["                                       top of the window */", "  char w_topline_was_set;           /* flag set to TRUE when topline is set,", "                                       e.g. by winrestview() */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["                                       top of the window */", "  char w_topline_was_set;           /* flag set to TRUE when topline is set,", "                                       e.g. by winrestview() */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["                                       top of the window */", "  char w_topline_was_set;           /* flag set to TRUE when topline is set,", "                                       e.g. by winrestview() */"], "readability/bool"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * === start of cached values ===="], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["   */", "  /*", "   * Recomputing is minimized by storing the result of computations."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["  int w_valid;", "  pos_T w_valid_cursor;             /* last known position of w_cursor, used", "                                       to adjust w_valid */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["  int w_valid;", "  pos_T w_valid_cursor;             /* last known position of w_cursor, used", "                                       to adjust w_valid */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * w_cline_height is the number of physical lines taken by the buffer line"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * w_wrow and w_wcol specify the cursor position in the window."], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * Info about the lines currently in the window is remembered to avoid"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * === end of cached values ==="], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  char_u      *w_localdir;          /* absolute path of local directory or", "                                       NULL */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["", "  char_u      *w_localdir;          /* absolute path of local directory or", "                                       NULL */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * The w_prev_pcmark field is used to check whether we really did jump to"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * the jumplist contains old cursor positions"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * the tagstack grows from 0 upwards:"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  /*", "   * w_fraction is the fractional row of the cursor within the window, from"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "  linenr_T w_nrwidth_line_count;        /* line count when ml_nrwidth_width", "                                         * was computed. */"], "readability/multiline_comment"]
["src/nvim/buffer_defs.h", ["", "  linenr_T w_nrwidth_line_count;        /* line count when ml_nrwidth_width", "                                         * was computed. */"], "readability/old_style_comment"]
["src/nvim/buffer_defs.h", ["", "#endif // NVIM_BUFFER_DEFS_H", ""], "whitespace/comments"]
