["src/nvim/os/env.c", ["          var = ExpandOne(&xpc, dst, NULL,", "              WILD_ADD_SLASH|WILD_SILENT, WILD_EXPAND_FREE);", "          mustfree = true;"], "whitespace/alignment"]
["src/nvim/os/env.c", ["        // with it, skip a character", "        if (*var != NUL && after_pathsep((char *)dst, (char *)dst + c)", "#if defined(BACKSLASH_IN_FILENAME)"], "readability/braces"]
["src/nvim/os/env.c", ["            && vim_ispathsep(*tail))", "          ++tail;", "        dst += c;"], "readability/increment"]
["src/nvim/os/env.c", ["        *dst++ = *src++;", "        --dstlen;", "      } else if ((src[0] == ' ' || src[0] == ',') && !one) {"], "readability/increment"]
["src/nvim/os/env.c", ["{", "  const char *varval = (const char *) iter;", "  if (varval == NULL) {"], "whitespace/cast"]
["src/nvim/os/env.c", ["  } else {", "    *len = (size_t) (dirend - varval);", "    return dirend + 1;"], "whitespace/cast"]
["src/nvim/os/env.c", ["{", "  const char *varend = (const char *) iter;", "  if (varend == NULL) {"], "whitespace/cast"]
["src/nvim/os/env.c", ["    *dir = colon + 1;", "    *len = (size_t) (varend - colon);", "    return colon - 1;"], "whitespace/cast"]
